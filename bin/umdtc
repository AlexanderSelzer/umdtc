#!/usr/bin/env node

var argv = require("minimist")(process.argv.slice(2))
var chalk = require("chalk")

var config = {
  "server": "localhost:8080",
  "interface": "wlp0s20u1u1",
  "gpsd_port": 2947,
  "fixed_pos": false,
  "monitor": false,
  "discard": false,
  "log": false
}

if (argv.h || argv.help) {
  console.log( 
    "--server | -s     {host:port}\n" +
    "   Use a custom server (instead of localhost:8080)\n\n" +

    "--if | -i         {name}\n" +
    "   set network interface to use\n\n" +

    "--gpsd-port       {port}\n\n" + 
    "--fixed-pos --lat {lat} --lon {lon}\n" +
    "   don't use GPSd, but send from a fixed position (useful if GPS signal is bad)\n\n" +

    "--gps-timeout     {seconds}\n" +
    "   don't use data after it is {seconds} old (can be set high if the sender moves slowly or not at all)\n\n" +

    "--discard\n" +
    "   don't send data to server (for debugging / testing)\n\n" +

    "--print\n" +
    "   print captured data to console\n"
      )
  process.exit(0)
}

// Alternative server address
var server = argv.server || argv.s
if (!server)
  console.log("server: " + chalk.green(config.server) + "\t (specify a server with " + chalk.blue("--server") + ")")
else
  config.server = server

// Alternative interface name
var interface = argv.if || argv.i
if (!interface)
  console.log("interface: " + chalk.green(config.interface) + "\t (select a network interface with " + chalk.blue("--if") + ")")
else
  config.interface = interface

// the GPSd port is basically always the default one
if (argv["gpsd-port"])
  config.gpsd_port = argv["gpsd-port"]

// not sure if this is a good idea...
if (argv["fixed-pos"]) {
  if (!argv.lat || !argv.lon) {
    console.log(chalk.red("error: ") + "see umdtc -h")
    process.exit(1)
  }
  else {
    config.fixed_pos = true
    config.lat = parseFloat(argv.lat)
    config.lon = parseFloat(argv.lon)
  }
}

// Sometimes the GPS signal is just bad, and you don't move.
if (argv["gps-timeout"]) {
  config.gps_timeout = parseInt(argv["gps-timeout"])
}

if (argv.discard) {
  config.discard = true
}

if (argv.print) {
  config.log = true
}

require("../umdtc.js")(config)
